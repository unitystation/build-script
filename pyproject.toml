[build-system]
requires = ["hatchling>=1.21.0"]
build-backend = "hatchling.build"

[project]
name = "usautobuild"
version = "0.1.0"
description = ""
requires-python = ">=3.11,<4.0"
authors = [
    { name = "AndrÃ©s Riquelme", email = "andresfranco.rs@gmail.com" },
]
dependencies = [
    "requests>=2.25.0,<3.0.0",
    "gitpython>=3.1.29,<4.0.0",
    "humanize>=4.5.0,<5.0.0",
]

[dependency-groups]
lint = [
    "pre-commit>=3.0.0",
    "ruff>=0.3.0,<0.4.0",
]
typecheck = [
    "mypy>=1.0.0,<2.0.0",
    "types-requests>=2.28.11.5,<3.0.0",
]
test = [
    "pytest>=7.2.0,<8.0.0",
    "pytest-cov>=4.0.0,<5.0.0",
]

[tool.ruff]
line-length = 121

[tool.ruff.lint]
ignore = [
    # doesn't like Optional
    # https://github.com/charliermarsh/ruff/issues/4858
    "UP007",
    # explicit raise from might be a bit too verbose, disable for now
    "B904",
    # asserts are useful in both tests and type checker persuasion
    "S101",
    # treats a link with the word "password" in it as a hardcoded password
    "S105",
    # enforced by formatter
    "E501",
]
select = [
    # pyflakes
    "F",
    # pycodestyle
    "E",
    "W",
    # isort
    "I",
    # flake8-bugbear
    "B",
    # flake8-naming
    "N",
    # pyupgrade
    "UP",
    # flake8-bandit
    "S",
    # flake8-comprehensions
    "C4",
    # flake8-logging-format
    "G",
    # flake8-simplify
    "SIM",
    # flake8-use-pathlib
    "PTH",
    # ruff
    "RUF",
]
fixable = [
    "I",
]

[tool.ruff.lint.isort]
combine-as-imports = true
lines-between-types = 1


[tool.mypy]
show_column_numbers = true
show_error_codes = true

disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
disallow_untyped_calls = true
disallow_subclassing_any = true
disallow_untyped_decorators = true
check_untyped_defs = true
no_implicit_optional = true
no_implicit_reexport = true
warn_unused_ignores = true
warn_return_any = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "git.*",
]
implicit_reexport = true

[[tool.mypy.overrides]]
module = [
    "tests.*",
]
disallow_untyped_defs = false
disallow_incomplete_defs = false

[tool.coverage.report]
omit = [
    "tests/*",
]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "\\.\\.\\.",
]
